name: CD
on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.3

      - name: Cache Poetry virtualenv
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Set Poetry config
        run: |
          poetry config virtualenvs.in-project false
          poetry config virtualenvs.path ~/.virtualenvs

      - name: Install Dependencies
        run: poetry install --without dev
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Publish
        env:
            PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
            poetry config pypi-token.pypi $PYPI_TOKEN
            poetry publish --build --dry-run
